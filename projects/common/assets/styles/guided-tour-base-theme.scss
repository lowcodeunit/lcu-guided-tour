body.tour-open {
    overflow: hidden;
}

@mixin guided-tour($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $bg-color: mat-color(map-get($theme, background), card) !default;
  $fg-color: mat-color(map-get($theme, foreground), text) !default;
  $tour-zindex: 1081 !default;
  $tour-orb-color: mat-color($primary) !default;

  lcu-guided-tour {
    .guided-tour-user-input-mask {
      z-index: $tour-zindex;
    }

    .guided-tour-spotlight-overlay {
      z-index: $tour-zindex + 1;
    }

    .tour-orb {
      z-index: $tour-zindex - 2;
      background-color: $tour-orb-color;
      box-shadow: 0 0 0.3rem 0.1rem $tour-orb-color;

      .tour-orb-ring {
        &::after {
          border: 1rem solid $tour-orb-color;
          box-shadow: 0 0 0.1rem 0.1rem $tour-orb-color;
        }
      }
    }

    .tour-step {
      z-index: $tour-zindex + 2;

      &.tour-bottom, &.tour-bottom-right, &.tour-bottom-left {
        .tour-arrow::before {
          @include tour-triangle(top, $bg-color);
        }
      }

      &.tour-top, &.tour-top-right, &.tour-top-left {
        .tour-arrow::before {
          @include tour-triangle(bottom, $bg-color);
        }
      }

      &.tour-left {
        .tour-arrow::before {
          @include tour-triangle(right, $bg-color);
        }
      }

      &.tour-right {
        .tour-arrow::before {
          @include tour-triangle(left, $bg-color);
        }
      }
    }
  }
}

@mixin tour-triangle($direction, $color: currentColor, $size: 1rem) {

    @if not index(top right bottom left, $direction) {
        @error 'Direction must be either `top`, `right`, `bottom` or `left`.';
    }

    $opposite-direction: top;

    @if $direction==top {
        $opposite-direction: bottom;
    }

    @if $direction==bottom {
        $opposite-direction: top;
    }

    @if $direction==right {
        $opposite-direction: left;
    }

    @if $direction==left {
        $opposite-direction: right;
    }

    width: 0;
    height: 0;
    content: '';
    z-index: 2;
    border-#{$opposite-direction}: $size solid $color;
    $perpendicular-borders: $size solid transparent;
    @if $direction==top or $direction==bottom {
        border-left: $perpendicular-borders;
        border-right: $perpendicular-borders;
    }
    @else if $direction==right or $direction==left {
        border-bottom: $perpendicular-borders;
        border-top: $perpendicular-borders;
    }
}
